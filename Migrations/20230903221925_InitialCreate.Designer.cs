// <auto-generated />
using AmazonAppBackend.Data;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;
using Npgsql.EntityFrameworkCore.PostgreSQL.Metadata;

#nullable disable

namespace AmazonAppBackend.Migrations
{
    [DbContext(typeof(DataContext))]
    [Migration("20230903221925_InitialCreate")]
    partial class InitialCreate
    {
        /// <inheritdoc />
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "7.0.10")
                .HasAnnotation("Relational:MaxIdentifierLength", 63);

            NpgsqlModelBuilderExtensions.UseIdentityByDefaultColumns(modelBuilder);

            modelBuilder.Entity("AmazonAppBackend.DTO.FriendRequest", b =>
                {
                    b.Property<string>("Sender")
                        .HasColumnType("text");

                    b.Property<string>("Receiver")
                        .HasColumnType("text");

                    b.HasKey("Sender", "Receiver");

                    b.ToTable("Friend_Requests");
                });

            modelBuilder.Entity("AmazonAppBackend.DTO.Friendship", b =>
                {
                    b.Property<string>("User1")
                        .HasColumnType("text");

                    b.Property<string>("User2")
                        .HasColumnType("text");

                    b.Property<long>("TimeAdded")
                        .HasColumnType("bigint");

                    b.HasKey("User1", "User2");

                    b.ToTable("Friendships");
                });

            modelBuilder.Entity("AmazonAppBackend.DTO.Profile", b =>
                {
                    b.Property<string>("Username")
                        .HasColumnType("text");

                    b.Property<string>("Email")
                        .IsRequired()
                        .HasColumnType("text");

                    b.Property<string>("FirstName")
                        .IsRequired()
                        .HasColumnType("text");

                    b.Property<string>("LastName")
                        .IsRequired()
                        .HasColumnType("text");

                    b.Property<string>("Password")
                        .IsRequired()
                        .HasColumnType("text");

                    b.HasKey("Username");

                    b.ToTable("Profiles");
                });
#pragma warning restore 612, 618
        }
    }
}
