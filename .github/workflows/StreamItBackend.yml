name: Build and deploy .NET Core application to Web App StreamItBackend
on:
  push:
    branches:
    - main
env:
  AZURE_WEBAPP_NAME: StreamItBackend
  AZURE_WEBAPP_PACKAGE_PATH: ./publish
  CONFIGURATION: Release
  DOTNET_CORE_VERSION: 6.0.x
  WORKING_DIRECTORY: .
  ConnectionStrings:PostgreSQLConnection: ${{ secrets.POSTGRESQL_CONNECTION_STRING }}
  S3ProfilePicConfig:RegionEndpoint: ${{ secrets.S3_PROFILE_PIC_CONFIG_REGION_ENDPOINT}}
  S3ProfilePicConfig:BucketName: ${{ secrets.S3_PROFILE_PIC_CONFIG_BUCKET_NAME }}
  S3EmailContentConfig:RegionEndpoint: ${{ secrets.S3_EMAIL_CONTENT_CONFIG_REGION_ENDPOINT }}
  S3EmailContentConfig:BucketName: ${{ secrets.S3_EMAIL_CONTENT_CONFIG_BUCKET_NAME }}
  AWSConfig:AccessKey: ${{ secrets.AWS_CONFIG_ACCESSKEY }}
  AWSConfig:SecretKey: ${{ secrets.AWS_CONFIG_SECRETKEY }}
  GmailSettings:SenderEmail: ${{ secrets.GMAIL_SETTINGS_SENDER_EMAIL }}
  GmailSettings:SenderPassword: ${{ secrets.GMAIL_SETTINGS_SENDER_PASSWORD }}
  GmailSettings:SmtpServer: ${{ secrets.GMAIL_SETTINGS_SMTP_SERVER }}
  JwtSettings:SecretKey: ${{ secrets.JWT_SETTINGS_SECRET_KEY }}
  JwtSettings:Issuer: ${{ secrets.JWT_SETTINGS_ISSUER }}
  JwtSettings:Audience: ${{ secrets.JWT_SETTINGS_AUDIENCE }}

jobs:
  build:
    runs-on: ubuntu-latest
    steps:
    - uses: actions/checkout@v3
    - name: Setup .NET Core
      uses: actions/setup-dotnet@v3
      with:
        dotnet-version: ${{ env.DOTNET_CORE_VERSION }}
    - name: Restore
      run: dotnet restore "${{ env.WORKING_DIRECTORY }}"
    - name: Build
      run: dotnet build "${{ env.WORKING_DIRECTORY }}" --configuration ${{ env.CONFIGURATION }} --no-restore
    - name: Test
      run: dotnet test "${{ env.WORKING_DIRECTORY }}" --no-build
    - name: Publish
      run: dotnet publish "${{ env.WORKING_DIRECTORY }}" --configuration ${{ env.CONFIGURATION }} --no-build --output "${{ env.AZURE_WEBAPP_PACKAGE_PATH }}"
    - name: Publish Artifacts
      uses: actions/upload-artifact@v3
      with:
        name: webapp
        path: ${{ env.AZURE_WEBAPP_PACKAGE_PATH }}
  deploy:
    runs-on: ubuntu-latest
    needs: build
    steps:
    - name: Download artifact from build job
      uses: actions/download-artifact@v3
      with:
        name: webapp
        path: ${{ env.AZURE_WEBAPP_PACKAGE_PATH }}
    - name: Deploy to Azure WebApp
      uses: azure/webapps-deploy@v2
      with:
        app-name: ${{ env.AZURE_WEBAPP_NAME }}
        publish-profile: ${{ secrets.StreamItBackend_80E5 }}
        package: ${{ env.AZURE_WEBAPP_PACKAGE_PATH }}
